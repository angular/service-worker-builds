{"version":3,"file":"config.js","sources":["../../../../../../packages/service-worker/config/src/duration.ts","../../../../../../packages/service-worker/config/src/glob.ts","../../../../../../packages/service-worker/config/src/generator.ts","../../../../../../packages/service-worker/config/public_api.ts","../../../../../../packages/service-worker/config/index.ts","../../../../../../packages/service-worker/config/config.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst PARSE_TO_PAIRS = /([0-9]+[^0-9]+)/g;\nconst PAIR_SPLIT = /^([0-9]+)([dhmsu]+)$/;\n\nexport function parseDurationToMs(duration: string): number {\n  const matches: string[] = [];\n\n  let array: RegExpExecArray|null;\n  while ((array = PARSE_TO_PAIRS.exec(duration)) !== null) {\n    matches.push(array[0]);\n  }\n  return matches\n      .map(match => {\n        const res = PAIR_SPLIT.exec(match);\n        if (res === null) {\n          throw new Error(`Not a valid duration: ${match}`);\n        }\n        let factor: number = 0;\n        switch (res[2]) {\n          case 'd':\n            factor = 86400000;\n            break;\n          case 'h':\n            factor = 3600000;\n            break;\n          case 'm':\n            factor = 60000;\n            break;\n          case 's':\n            factor = 1000;\n            break;\n          case 'u':\n            factor = 1;\n            break;\n          default:\n            throw new Error(`Not a valid duration unit: ${res[2]}`);\n        }\n        return parseInt(res[1]) * factor;\n      })\n      .reduce((total, value) => total + value, 0);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst QUESTION_MARK = '[^/]';\nconst WILD_SINGLE = '[^/]*';\nconst WILD_OPEN = '(?:.+\\\\/)?';\n\nconst TO_ESCAPE_BASE = [\n  {replace: /\\./g, with: '\\\\.'},\n  {replace: /\\+/g, with: '\\\\+'},\n  {replace: /\\*/g, with: WILD_SINGLE},\n];\nconst TO_ESCAPE_WILDCARD_QM = [\n  ...TO_ESCAPE_BASE,\n  {replace: /\\?/g, with: QUESTION_MARK},\n];\nconst TO_ESCAPE_LITERAL_QM = [\n  ...TO_ESCAPE_BASE,\n  {replace: /\\?/g, with: '\\\\?'},\n];\n\nexport function globToRegex(glob: string, literalQuestionMark = false): string {\n  const toEscape = literalQuestionMark ? TO_ESCAPE_LITERAL_QM : TO_ESCAPE_WILDCARD_QM;\n  const segments = glob.split('/').reverse();\n  let regex: string = '';\n  while (segments.length > 0) {\n    const segment = segments.pop() !;\n    if (segment === '**') {\n      if (segments.length > 0) {\n        regex += WILD_OPEN;\n      } else {\n        regex += '.*';\n      }\n    } else {\n      const processed = toEscape.reduce(\n          (segment, escape) => segment.replace(escape.replace, escape.with), segment);\n      regex += processed;\n      if (segments.length > 0) {\n        regex += '\\\\/';\n      }\n    }\n  }\n  return regex;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {parseDurationToMs} from './duration';\nimport {Filesystem} from './filesystem';\nimport {globToRegex} from './glob';\nimport {Config} from './in';\n\nconst DEFAULT_NAVIGATION_URLS = [\n  '/**',           // Include all URLs.\n  '!/**/*.*',      // Exclude URLs to files (containing a file extension in the last segment).\n  '!/**/*__*',     // Exclude URLs containing `__` in the last segment.\n  '!/**/*__*/**',  // Exclude URLs containing `__` in any other segment.\n];\n\n/**\n * Consumes service worker configuration files and processes them into control files.\n *\n * @publicApi\n */\nexport class Generator {\n  constructor(readonly fs: Filesystem, private baseHref: string) {}\n\n  async process(config: Config): Promise<Object> {\n    const unorderedHashTable = {};\n    const assetGroups = await this.processAssetGroups(config, unorderedHashTable);\n\n    return {\n      configVersion: 1,\n      appData: config.appData,\n      index: joinUrls(this.baseHref, config.index), assetGroups,\n      dataGroups: this.processDataGroups(config),\n      hashTable: withOrderedKeys(unorderedHashTable),\n      navigationUrls: processNavigationUrls(this.baseHref, config.navigationUrls),\n    };\n  }\n\n  private async processAssetGroups(config: Config, hashTable: {[file: string]: string | undefined}):\n      Promise<Object[]> {\n    const seenMap = new Set<string>();\n    return Promise.all((config.assetGroups || []).map(async(group) => {\n      if (group.resources.versionedFiles) {\n        console.warn(\n            `Asset-group '${group.name}' in 'ngsw-config.json' uses the 'versionedFiles' option.\\n` +\n            'As of v6 \\'versionedFiles\\' and \\'files\\' options have the same behavior. ' +\n            'Use \\'files\\' instead.');\n      }\n\n      const fileMatcher = globListToMatcher(group.resources.files || []);\n      const versionedMatcher = globListToMatcher(group.resources.versionedFiles || []);\n\n      const allFiles = await this.fs.list('/');\n\n      const plainFiles = allFiles.filter(fileMatcher).filter(file => !seenMap.has(file));\n      plainFiles.forEach(file => seenMap.add(file));\n\n      const versionedFiles = allFiles.filter(versionedMatcher).filter(file => !seenMap.has(file));\n      versionedFiles.forEach(file => seenMap.add(file));\n\n      // Add the hashes.\n      const matchedFiles = [...plainFiles, ...versionedFiles].sort();\n      await matchedFiles.reduce(async(previous, file) => {\n        await previous;\n        const hash = await this.fs.hash(file);\n        hashTable[joinUrls(this.baseHref, file)] = hash;\n      }, Promise.resolve());\n\n      return {\n        name: group.name,\n        installMode: group.installMode || 'prefetch',\n        updateMode: group.updateMode || group.installMode || 'prefetch',\n        urls: matchedFiles.map(url => joinUrls(this.baseHref, url)),\n        patterns: (group.resources.urls || []).map(url => urlToRegex(url, this.baseHref, true)),\n      };\n    }));\n  }\n\n  private processDataGroups(config: Config): Object[] {\n    return (config.dataGroups || []).map(group => {\n      return {\n        name: group.name,\n        patterns: group.urls.map(url => urlToRegex(url, this.baseHref, true)),\n        strategy: group.cacheConfig.strategy || 'performance',\n        maxSize: group.cacheConfig.maxSize,\n        maxAge: parseDurationToMs(group.cacheConfig.maxAge),\n        timeoutMs: group.cacheConfig.timeout && parseDurationToMs(group.cacheConfig.timeout),\n        version: group.version !== undefined ? group.version : 1,\n      };\n    });\n  }\n}\n\nexport function processNavigationUrls(\n    baseHref: string, urls = DEFAULT_NAVIGATION_URLS): {positive: boolean, regex: string}[] {\n  return urls.map(url => {\n    const positive = !url.startsWith('!');\n    url = positive ? url : url.substr(1);\n    return {positive, regex: `^${urlToRegex(url, baseHref)}$`};\n  });\n}\n\nfunction globListToMatcher(globs: string[]): (file: string) => boolean {\n  const patterns = globs.map(pattern => {\n    if (pattern.startsWith('!')) {\n      return {\n        positive: false,\n        regex: new RegExp('^' + globToRegex(pattern.substr(1)) + '$'),\n      };\n    } else {\n      return {\n        positive: true,\n        regex: new RegExp('^' + globToRegex(pattern) + '$'),\n      };\n    }\n  });\n  return (file: string) => matches(file, patterns);\n}\n\nfunction matches(file: string, patterns: {positive: boolean, regex: RegExp}[]): boolean {\n  const res = patterns.reduce((isMatch, pattern) => {\n    if (pattern.positive) {\n      return isMatch || pattern.regex.test(file);\n    } else {\n      return isMatch && !pattern.regex.test(file);\n    }\n  }, false);\n  return res;\n}\n\nfunction urlToRegex(url: string, baseHref: string, literalQuestionMark?: boolean): string {\n  if (!url.startsWith('/') && url.indexOf('://') === -1) {\n    url = joinUrls(baseHref, url);\n  }\n\n  return globToRegex(url, literalQuestionMark);\n}\n\nfunction joinUrls(a: string, b: string): string {\n  if (a.endsWith('/') && b.startsWith('/')) {\n    return a + b.substr(1);\n  } else if (!a.endsWith('/') && !b.startsWith('/')) {\n    return a + '/' + b;\n  }\n  return a + b;\n}\n\nfunction withOrderedKeys<T extends{[key: string]: any}>(unorderedObj: T): T {\n  const orderedObj = {} as T;\n  Object.keys(unorderedObj).sort().forEach(key => orderedObj[key] = unorderedObj[key]);\n  return orderedObj;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {Filesystem} from './src/filesystem';\nexport {Generator} from './src/generator';\nexport {AssetGroup, Config, DataGroup, Duration, Glob} from './src/in';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__spread"],"mappings":"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"}