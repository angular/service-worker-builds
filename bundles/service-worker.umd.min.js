/**
 * @license Angular v5.2.11-d8b63d0
 * (c) 2010-2018 Google, Inc. https://angular.io/
 * License: MIT
 */
!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports,require("@angular/common"),require("@angular/core"),require("rxjs/operator/filter"),require("rxjs/operator/take"),require("rxjs/operator/toPromise"),require("rxjs/observable/concat"),require("rxjs/observable/defer"),require("rxjs/observable/fromEvent"),require("rxjs/observable/of"),require("rxjs/observable/throw"),require("rxjs/operator/do"),require("rxjs/operator/map"),require("rxjs/operator/publish"),require("rxjs/operator/switchMap"),require("rxjs/Subject"),require("rxjs/observable/merge"),require("rxjs/observable/never")):"function"==typeof define&&define.amd?define(["exports","@angular/common","@angular/core","rxjs/operator/filter","rxjs/operator/take","rxjs/operator/toPromise","rxjs/observable/concat","rxjs/observable/defer","rxjs/observable/fromEvent","rxjs/observable/of","rxjs/observable/throw","rxjs/operator/do","rxjs/operator/map","rxjs/operator/publish","rxjs/operator/switchMap","rxjs/Subject","rxjs/observable/merge","rxjs/observable/never"],factory):factory((global.ng=global.ng||{},global.ng.serviceWorker={}),global.ng.common,global.ng.core,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable,global.Rx.Observable,global.Rx.Observable,global.Rx.Observable,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable)}(this,function(exports,_angular_common,_angular_core,rxjs_operator_filter,rxjs_operator_take,rxjs_operator_toPromise,rxjs_observable_concat,rxjs_observable_defer,rxjs_observable_fromEvent,rxjs_observable_of,rxjs_observable_throw,rxjs_operator_do,rxjs_operator_map,rxjs_operator_publish,rxjs_operator_switchMap,rxjs_Subject,rxjs_observable_merge,rxjs_observable_never){"use strict";function errorObservable(message){return rxjs_observable_defer.defer(function(){return rxjs_observable_throw._throw(new Error(message))})}function ngswAppInitializer(injector,script,options,platformId){return function(){var app=injector.get(_angular_core.ApplicationRef);if(_angular_common.isPlatformBrowser(platformId)&&"serviceWorker"in navigator&&!1!==options.enabled){var onStable=rxjs_operator_filter.filter.call(app.isStable,function(stable){return!!stable}),isStable=rxjs_operator_take.take.call(onStable,1),whenStable=rxjs_operator_toPromise.toPromise.call(isStable);navigator.serviceWorker.addEventListener("controllerchange",function(){null!==navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage({action:"INITIALIZE"})}),whenStable.then(function(){return navigator.serviceWorker.register(script,{scope:options.scope})})}}}function ngswCommChannelFactory(opts,platformId){return new NgswCommChannel(!1!==opts.enabled?navigator.serviceWorker:void 0,platformId)}var __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p])}return t},ERR_SW_NOT_SUPPORTED="Service workers are disabled or not supported by this browser",NgswCommChannel=function(){function NgswCommChannel(serviceWorker,platformId){if(this.serviceWorker=serviceWorker,serviceWorker&&_angular_common.isPlatformBrowser(platformId)){var controllerChangeEvents=rxjs_observable_fromEvent.fromEvent(serviceWorker,"controllerchange"),controllerChanges=rxjs_operator_map.map.call(controllerChangeEvents,function(){return serviceWorker.controller}),currentController=rxjs_observable_defer.defer(function(){return rxjs_observable_of.of(serviceWorker.controller)}),controllerWithChanges=rxjs_observable_concat.concat(currentController,controllerChanges);this.worker=rxjs_operator_filter.filter.call(controllerWithChanges,function(c){return!!c}),this.registration=rxjs_operator_switchMap.switchMap.call(this.worker,function(){return serviceWorker.getRegistration()});var rawEvents=rxjs_observable_fromEvent.fromEvent(serviceWorker,"message"),rawEventPayload=rxjs_operator_map.map.call(rawEvents,function(event){return event.data}),eventsUnconnected=rxjs_operator_filter.filter.call(rawEventPayload,function(event){return!!event&&!!event.type}),events=rxjs_operator_publish.publish.call(eventsUnconnected);this.events=events,events.connect()}else this.serviceWorker=void 0,this.worker=this.events=this.registration=errorObservable(ERR_SW_NOT_SUPPORTED)}return NgswCommChannel.prototype.postMessage=function(action,payload){var worker=rxjs_operator_take.take.call(this.worker,1),sideEffect=rxjs_operator_do._do.call(worker,function(sw){sw.postMessage(__assign({action:action},payload))});return rxjs_operator_toPromise.toPromise.call(sideEffect).then(function(){})},NgswCommChannel.prototype.postMessageWithStatus=function(type,payload,nonce){var waitForStatus=this.waitForStatus(nonce),postMessage=this.postMessage(type,payload);return Promise.all([waitForStatus,postMessage]).then(function(){})},NgswCommChannel.prototype.generateNonce=function(){return Math.round(1e7*Math.random())},NgswCommChannel.prototype.eventsOfType=function(type){return rxjs_operator_filter.filter.call(this.events,function(event){return event.type===type})},NgswCommChannel.prototype.nextEventOfType=function(type){return rxjs_operator_take.take.call(this.eventsOfType(type),1)},NgswCommChannel.prototype.waitForStatus=function(nonce){var statusEventsWithNonce=rxjs_operator_filter.filter.call(this.eventsOfType("STATUS"),function(event){return event.nonce===nonce}),singleStatusEvent=rxjs_operator_take.take.call(statusEventsWithNonce,1),mapErrorAndValue=rxjs_operator_map.map.call(singleStatusEvent,function(event){if(!event.status)throw new Error(event.error)});return rxjs_operator_toPromise.toPromise.call(mapErrorAndValue)},Object.defineProperty(NgswCommChannel.prototype,"isEnabled",{get:function(){return!!this.serviceWorker},enumerable:!0,configurable:!0}),NgswCommChannel.ctorParameters=function(){return[null,{type:void 0,decorators:[{type:_angular_core.Inject,args:[_angular_core.PLATFORM_ID]}]}]},NgswCommChannel}(),SwPush=function(){function SwPush(sw){if(this.sw=sw,this.subscriptionChanges=new rxjs_Subject.Subject,!sw.isEnabled)return this.messages=rxjs_observable_never.never(),void(this.subscription=rxjs_observable_never.never());this.messages=rxjs_operator_map.map.call(this.sw.eventsOfType("PUSH"),function(message){return message.data}),this.pushManager=rxjs_operator_map.map.call(this.sw.registration,function(registration){return registration.pushManager});var workerDrivenSubscriptions=rxjs_operator_switchMap.switchMap.call(this.pushManager,function(pm){return pm.getSubscription().then(function(sub){return sub})});this.subscription=rxjs_observable_merge.merge(workerDrivenSubscriptions,this.subscriptionChanges)}return Object.defineProperty(SwPush.prototype,"isEnabled",{get:function(){return this.sw.isEnabled},enumerable:!0,configurable:!0}),SwPush.prototype.requestSubscription=function(options){var _this=this;if(!this.sw.isEnabled)return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));for(var pushOptions={userVisibleOnly:!0},key=atob(options.serverPublicKey.replace(/_/g,"/").replace(/-/g,"+")),applicationServerKey=new Uint8Array(new ArrayBuffer(key.length)),i=0;i<key.length;i++)applicationServerKey[i]=key.charCodeAt(i);pushOptions.applicationServerKey=applicationServerKey;var subscribe=rxjs_operator_switchMap.switchMap.call(this.pushManager,function(pm){return pm.subscribe(pushOptions)}),subscribeOnce=rxjs_operator_take.take.call(subscribe,1);return rxjs_operator_toPromise.toPromise.call(subscribeOnce).then(function(sub){return _this.subscriptionChanges.next(sub),sub})},SwPush.prototype.unsubscribe=function(){var _this=this;if(!this.sw.isEnabled)return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));var unsubscribe=rxjs_operator_switchMap.switchMap.call(this.subscription,function(sub){if(null!==sub)return sub.unsubscribe().then(function(success){if(success)return void _this.subscriptionChanges.next(null);throw new Error("Unsubscribe failed!")});throw new Error("Not subscribed to push notifications.")}),unsubscribeOnce=rxjs_operator_take.take.call(unsubscribe,1);return rxjs_operator_toPromise.toPromise.call(unsubscribeOnce)},SwPush.decorators=[{type:_angular_core.Injectable}],SwPush.ctorParameters=function(){return[{type:NgswCommChannel}]},SwPush}(),SwUpdate=function(){function SwUpdate(sw){if(this.sw=sw,!sw.isEnabled)return this.available=rxjs_observable_never.never(),void(this.activated=rxjs_observable_never.never());this.available=this.sw.eventsOfType("UPDATE_AVAILABLE"),this.activated=this.sw.eventsOfType("UPDATE_ACTIVATED")}return Object.defineProperty(SwUpdate.prototype,"isEnabled",{get:function(){return this.sw.isEnabled},enumerable:!0,configurable:!0}),SwUpdate.prototype.checkForUpdate=function(){if(!this.sw.isEnabled)return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));var statusNonce=this.sw.generateNonce();return this.sw.postMessageWithStatus("CHECK_FOR_UPDATES",{statusNonce:statusNonce},statusNonce)},SwUpdate.prototype.activateUpdate=function(){if(!this.sw.isEnabled)return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));var statusNonce=this.sw.generateNonce();return this.sw.postMessageWithStatus("ACTIVATE_UPDATE",{statusNonce:statusNonce},statusNonce)},SwUpdate.decorators=[{type:_angular_core.Injectable}],SwUpdate.ctorParameters=function(){return[{type:NgswCommChannel}]},SwUpdate}(),RegistrationOptions=function(){function RegistrationOptions(){}return RegistrationOptions}(),SCRIPT=new _angular_core.InjectionToken("NGSW_REGISTER_SCRIPT"),ServiceWorkerModule=function(){function ServiceWorkerModule(){}return ServiceWorkerModule.register=function(script,opts){return void 0===opts&&(opts={}),{ngModule:ServiceWorkerModule,providers:[{provide:SCRIPT,useValue:script},{provide:RegistrationOptions,useValue:opts},{provide:NgswCommChannel,useFactory:ngswCommChannelFactory,deps:[RegistrationOptions,_angular_core.PLATFORM_ID]},{provide:_angular_core.APP_INITIALIZER,useFactory:ngswAppInitializer,deps:[_angular_core.Injector,SCRIPT,RegistrationOptions,_angular_core.PLATFORM_ID],multi:!0}]}},ServiceWorkerModule.decorators=[{type:_angular_core.NgModule,args:[{providers:[SwPush,SwUpdate]}]}],ServiceWorkerModule.ctorParameters=function(){return[]},ServiceWorkerModule}();exports.ServiceWorkerModule=ServiceWorkerModule,exports.SwPush=SwPush,exports.SwUpdate=SwUpdate,exports.ɵe=NgswCommChannel,exports.ɵa=RegistrationOptions,exports.ɵb=SCRIPT,exports.ɵc=ngswAppInitializer,exports.ɵd=ngswCommChannelFactory,Object.defineProperty(exports,"__esModule",{value:!0})});
//# sourceMappingURL=service-worker.umd.min.js.map