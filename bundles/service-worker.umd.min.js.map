{"version":3,"sources":["packages/service-worker/service-worker.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","serviceWorker","common","core","rxjs","operators","this","i0","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","ERR_SW_NOT_SUPPORTED","NgswCommChannel","controllerChanges","fromEvent","pipe","map","controller","currentController","defer","of","controllerWithChanges","concat","worker","filter","c","registration","switchMap","getRegistration","events","event","data","type","publish","connect","errorObservable","message","throwError","Error","postMessage","action","payload","take","tap","sw","toPromise","then","postMessageWithStatus","nonce","waitForStatus","Promise","all","generateNonce","Math","round","random","eventsOfType","nextEventOfType","status","error","defineProperty","get","enumerable","configurable","SwPush","subscriptionChanges","Subject","isEnabled","messages","NEVER","notificationClicks","subscription","pushManager","workerDrivenSubscriptions","pm","getSubscription","merge","requestSubscription","options","_this","reject","pushOptions","userVisibleOnly","key","decodeBase64","serverPublicKey","replace","applicationServerKey","Uint8Array","ArrayBuffer","charCodeAt","subscribe","sub","next","unsubscribe","success","input","atob","ngInjectableDef","defineInjectable","token","SwPush_Factory","inject","providedIn","SwUpdate","available","activated","checkForUpdate","statusNonce","activateUpdate","SwUpdate_Factory","RegistrationOptions","SCRIPT","InjectionToken","ngswAppInitializer","injector","script","platformId","app","ApplicationRef","isPlatformBrowser","navigator","enabled","whenStable","isStable","stable","addEventListener","register","scope","ngswCommChannelFactory","opts","undefined","ServiceWorkerModule","ngModule","providers","provide","useValue","useFactory","deps","PLATFORM_ID","APP_INITIALIZER","Injector","multi","ngModuleDef","ÉµdefineNgModule","ngInjectorDef","defineInjector","ServiceWorkerModule_Factory","imports","value"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,kBAAmBA,QAAQ,SACvJ,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,2BAA4B,UAAW,kBAAmB,gBAAiB,iBAAkB,QAASJ,GAChIA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,OAAUR,EAAOQ,GAAGC,kBAAqBT,EAAOQ,GAAGE,OAAQV,EAAOQ,GAAGG,KAAMX,EAAOY,KAAKC,UAAWb,EAAOY,MAHnK,CAIEE,KAAM,SAAUZ,EAASQ,EAAQK,EAAIF,EAAWD,GAAQ,aAiBtD,IAAII,EAAW,WAQX,OAPAA,EAAWC,OAAOC,QAAU,SAASF,EAASG,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMf,KAAMS,YAU5BO,EAAuB,gEAOvBC,EAAiC,WACjC,SAASA,EAAgBtB,GAErB,GADAK,KAAKL,cAAgBA,EAChBA,EAGA,CACD,IACIuB,EADyBpB,EAAKqB,UAAUxB,EAAe,oBACZyB,KAAKrB,EAAUsB,IAAI,WAAc,OAAO1B,EAAc2B,cACjGC,EAAoBzB,EAAK0B,MAAM,WAAc,OAAO1B,EAAK2B,GAAG9B,EAAc2B,cAC1EI,EAAwB5B,EAAK6B,OAAOJ,EAAmBL,GAC3DlB,KAAK4B,OAASF,EAAsBN,KAAKrB,EAAU8B,OAAO,SAAUC,GAAK,QAASA,KAClF9B,KAAK+B,aAAgB/B,KAAK4B,OAAOR,KAAKrB,EAAUiC,UAAU,WAAc,OAAOrC,EAAcsC,qBAC7F,IAGIC,EAHYpC,EAAKqB,UAAUxB,EAAe,WACdyB,KAAKrB,EAAUsB,IAAI,SAAUc,GAAS,OAAOA,EAAMC,QAC3ChB,KAAKrB,EAAU8B,OAAO,SAAUM,GAAS,OAAOA,GAASA,EAAME,QACxEjB,KAAKrB,EAAUuC,WAC9CJ,EAAOK,UACPvC,KAAKkC,OAASA,OAddlC,KAAK4B,OAAS5B,KAAKkC,OAASlC,KAAK+B,aAV7C,SAASS,EAAgBC,GACrB,OAAO3C,EAAK0B,MAAM,WAAc,OAAO1B,EAAK4C,WAAW,IAAIC,MAAMF,MASTD,CAAgBxB,GAqDxE,OApCAC,EAAgBL,UAAUgC,YAAc,SAAUC,EAAQC,GACtD,OAAO9C,KAAK4B,OACPR,KAAKrB,EAAUgD,KAAK,GAAIhD,EAAUiD,IAAI,SAAUC,GACjDA,EAAGL,YAAY1C,GAAW2C,OAAQA,GAAUC,OAE3CI,YACAC,KAAK,eAEdlC,EAAgBL,UAAUwC,sBAAwB,SAAUf,EAAMS,EAASO,GACvE,IAAIC,EAAgBtD,KAAKsD,cAAcD,GACnCT,EAAc5C,KAAK4C,YAAYP,EAAMS,GACzC,OAAOS,QAAQC,KAAKF,EAAeV,IAAcO,KAAK,eAE1DlC,EAAgBL,UAAU6C,cAAgB,WAAc,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,WAC/E3C,EAAgBL,UAAUiD,aAAe,SAAUxB,GAE/C,OAAOrC,KAAKkC,OAAOd,KAAKrB,EAAU8B,OADnB,SAAUM,GAAS,OAAOA,EAAME,OAASA,MAG5DpB,EAAgBL,UAAUkD,gBAAkB,SAAUzB,GAClD,OAAOrC,KAAK6D,aAAaxB,GAAMjB,KAAKrB,EAAUgD,KAAK,KAEvD9B,EAAgBL,UAAU0C,cAAgB,SAAUD,GAChD,OAAOrD,KAAK6D,aAAa,UACpBzC,KAAKrB,EAAU8B,OAAO,SAAUM,GAAS,OAAOA,EAAMkB,QAAUA,IAAWtD,EAAUgD,KAAK,GAAIhD,EAAUsB,IAAI,SAAUc,GACvH,IAAIA,EAAM4B,OAGV,MAAM,IAAIpB,MAAMR,EAAM6B,UAErBd,aAET/C,OAAO8D,eAAehD,EAAgBL,UAAW,aAC7CsD,IAAK,WAAc,QAASlE,KAAKL,eACjCwE,YAAY,EACZC,cAAc,IAEXnD,EAzDyB,GAwEhCoD,EAAwB,WACxB,SAASA,EAAOpB,GAGZ,GAFAjD,KAAKiD,GAAKA,EACVjD,KAAKsE,oBAAsB,IAAIxE,EAAKyE,SAC/BtB,EAAGuB,UAIJ,OAHAxE,KAAKyE,SAAW3E,EAAK4E,MACrB1E,KAAK2E,mBAAqB7E,EAAK4E,WAC/B1E,KAAK4E,aAAe9E,EAAK4E,OAG7B1E,KAAKyE,SAAWzE,KAAKiD,GAAGY,aAAa,QAAQzC,KAAKrB,EAAUsB,IAAI,SAAUoB,GAAW,OAAOA,EAAQL,QACpGpC,KAAK2E,mBACD3E,KAAKiD,GAAGY,aAAa,sBAAsBzC,KAAKrB,EAAUsB,IAAI,SAAUoB,GAAW,OAAOA,EAAQL,QACtGpC,KAAK6E,YAAc7E,KAAKiD,GAAGlB,aAAaX,KAAKrB,EAAUsB,IAAI,SAAUU,GAAgB,OAAOA,EAAa8C,eACzG,IAAIC,EAA4B9E,KAAK6E,YAAYzD,KAAKrB,EAAUiC,UAAU,SAAU+C,GAAM,OAAOA,EAAGC,qBACpGhF,KAAK4E,aAAe9E,EAAKmF,MAAMH,EAA2B9E,KAAKsE,qBAkDnE,OAhDAnE,OAAO8D,eAAeI,EAAOzD,UAAW,aAKpCsD,IAAK,WAAc,OAAOlE,KAAKiD,GAAGuB,WAClCL,YAAY,EACZC,cAAc,IAElBC,EAAOzD,UAAUsE,oBAAsB,SAAUC,GAC7C,IAAIC,EAAQpF,KACZ,IAAKA,KAAKiD,GAAGuB,UACT,OAAOjB,QAAQ8B,OAAO,IAAI1C,MAAM3B,IAKpC,IAHA,IAAIsE,GAAgBC,iBAAiB,GACjCC,EAAMxF,KAAKyF,aAAaN,EAAQO,gBAAgBC,QAAQ,KAAM,KAAKA,QAAQ,KAAM,MACjFC,EAAuB,IAAIC,WAAW,IAAIC,YAAYN,EAAI9E,SACrDH,EAAI,EAAGA,EAAIiF,EAAI9E,OAAQH,IAC5BqF,EAAqBrF,GAAKiF,EAAIO,WAAWxF,GAG7C,OADA+E,EAAYM,qBAAuBA,EAC5B5F,KAAK6E,YAAYzD,KAAKrB,EAAUiC,UAAU,SAAU+C,GAAM,OAAOA,EAAGiB,UAAUV,KAAkBvF,EAAUgD,KAAK,IACjHG,YACAC,KAAK,SAAU8C,GAEhB,OADAb,EAAMd,oBAAoB4B,KAAKD,GACxBA,KAGf5B,EAAOzD,UAAUuF,YAAc,WAC3B,IAAIf,EAAQpF,KACZ,OAAKA,KAAKiD,GAAGuB,UAcNxE,KAAK4E,aAAaxD,KAAKrB,EAAUgD,KAAK,GAAIhD,EAAUiC,UAXvC,SAAUiE,GAC1B,GAAY,OAARA,EACA,MAAM,IAAItD,MAAM,yCAEpB,OAAOsD,EAAIE,cAAchD,KAAK,SAAUiD,GACpC,IAAKA,EACD,MAAM,IAAIzD,MAAM,uBAEpByC,EAAMd,oBAAoB4B,KAAK,WAG8ChD,YAb1EK,QAAQ8B,OAAO,IAAI1C,MAAM3B,KAexCqD,EAAOzD,UAAU6E,aAAe,SAAUY,GAAS,OAAOC,KAAKD,IAC/DhC,EAAOkC,gBAAkBtG,EAAGuG,kBAAmBC,MAAOpC,EAAQlF,QAAS,SAASuH,EAAerG,GAAK,OAAO,IAAKA,GAAKgE,GAAQpE,EAAG0G,OAAO1F,KAAsB2F,WAAY,OAClKvC,EAjEgB,GAsFvBwC,EAA0B,WAC1B,SAASA,EAAS5D,GAEd,GADAjD,KAAKiD,GAAKA,GACLA,EAAGuB,UAGJ,OAFAxE,KAAK8G,UAAYhH,EAAK4E,WACtB1E,KAAK+G,UAAYjH,EAAK4E,OAG1B1E,KAAK8G,UAAY9G,KAAKiD,GAAGY,aAAa,oBACtC7D,KAAK+G,UAAY/G,KAAKiD,GAAGY,aAAa,oBA0B1C,OAxBA1D,OAAO8D,eAAe4C,EAASjG,UAAW,aAKtCsD,IAAK,WAAc,OAAOlE,KAAKiD,GAAGuB,WAClCL,YAAY,EACZC,cAAc,IAElByC,EAASjG,UAAUoG,eAAiB,WAChC,IAAKhH,KAAKiD,GAAGuB,UACT,OAAOjB,QAAQ8B,OAAO,IAAI1C,MAAM3B,IAEpC,IAAIiG,EAAcjH,KAAKiD,GAAGQ,gBAC1B,OAAOzD,KAAKiD,GAAGG,sBAAsB,qBAAuB6D,YAAaA,GAAeA,IAE5FJ,EAASjG,UAAUsG,eAAiB,WAChC,IAAKlH,KAAKiD,GAAGuB,UACT,OAAOjB,QAAQ8B,OAAO,IAAI1C,MAAM3B,IAEpC,IAAIiG,EAAcjH,KAAKiD,GAAGQ,gBAC1B,OAAOzD,KAAKiD,GAAGG,sBAAsB,mBAAqB6D,YAAaA,GAAeA,IAE1FJ,EAASN,gBAAkBtG,EAAGuG,kBAAmBC,MAAOI,EAAU1H,QAAS,SAASgI,EAAiB9G,GAAK,OAAO,IAAKA,GAAKwG,GAAU5G,EAAG0G,OAAO1F,KAAsB2F,WAAY,OAC1KC,EAnCkB,GAkDzBO,EACA,SAASA,MAITC,EAAS,IAAIpH,EAAGqH,eAAe;;;;;;;OACnC,SAASC,EAAmBC,EAAUC,EAAQtC,EAASuC,GAoBnD,OAnBkB,WACd,IAAIC,EAAMH,EAAStD,IAAIjE,EAAG2H,gBAC1B,GAAMhI,EAAOiI,kBAAkBH,IAAgB,kBAAmBI,YAC1C,IAApB3C,EAAQ4C,QADZ,CAIA,IAAIC,EAAaL,EAAIM,SAAS7G,KAAKrB,EAAU8B,OAAO,SAAUqG,GAAU,QAASA,IAAYnI,EAAUgD,KAAK,IAAIG,YAIhH4E,UAAUnI,cAAcwI,iBAAiB,mBAAoB,WACd,OAAvCL,UAAUnI,cAAc2B,YACxBwG,UAAUnI,cAAc2B,WAAWsB,aAAcC,OAAQ,iBAKjEmF,EAAW7E,KAAK,WAAc,OAAO2E,UAAUnI,cAAcyI,SAASX,GAAUY,MAAOlD,EAAQkD,YAIvG,SAASC,EAAuBC,EAAMb,GAClC,OAAO,IAAIzG,EAAgBrB,EAAOiI,kBAAkBH,KAAgC,IAAjBa,EAAKR,QAAoBD,UAAUnI,mBAClG6I,GAKR,IAAIC,EAAqC,WACrC,SAASA,KA+BT,OAvBAA,EAAoBL,SAAW,SAAUX,EAAQc,GAE7C,YADa,IAATA,IAAmBA,OAEnBG,SAAUD,EACVE,YACMC,QAASvB,EAAQwB,SAAUpB,IAC3BmB,QAASxB,EAAqByB,SAAUN,IAEtCK,QAAS3H,EACT6H,WAAYR,EACZS,MAAO3B,EAAqBnH,EAAG+I,eAG/BJ,QAAS3I,EAAGgJ,gBACZH,WAAYvB,EACZwB,MAAO9I,EAAGiJ,SAAU7B,EAAQD,EAAqBnH,EAAG+I,aACpDG,OAAO,MAKvBV,EAAoBW,YAAcnJ,EAAGoJ,iBAAkBhH,KAAMoG,IAC7DA,EAAoBa,cAAgBrJ,EAAGsJ,gBAAiBpK,QAAS,SAASqK,EAA4BnJ,GAAK,OAAO,IAAKA,GAAKoI,IAA2BE,WAAYtE,EAAQwC,GAAW4C,aAC/KhB,EAhC6B;;;;;;;;;;;;;;;;;;;;;;AAkExCrJ,EAAQqJ,oBAAsBA,EAC9BrJ,EAAQiF,OAASA,EACjBjF,EAAQyH,SAAWA,EAEnB1G,OAAO8D,eAAe7E,EAAS,cAAgBsK,OAAO","sourcesContent":["/**\n * @license Angular v8.0.0-beta.6+43.sha-7ac58be.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs/operators'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@angular/service-worker', ['exports', '@angular/common', '@angular/core', 'rxjs/operators', 'rxjs'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.serviceWorker = {}), global.ng.common, global.ng.core, global.rxjs.operators, global.rxjs));\n}(this, function (exports, common, i0, operators, rxjs) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\n    function errorObservable(message) {\n        return rxjs.defer(function () { return rxjs.throwError(new Error(message)); });\n    }\n    /**\n     * @publicApi\n     */\n    var NgswCommChannel = /** @class */ (function () {\n        function NgswCommChannel(serviceWorker) {\n            this.serviceWorker = serviceWorker;\n            if (!serviceWorker) {\n                this.worker = this.events = this.registration = errorObservable(ERR_SW_NOT_SUPPORTED);\n            }\n            else {\n                var controllerChangeEvents = rxjs.fromEvent(serviceWorker, 'controllerchange');\n                var controllerChanges = controllerChangeEvents.pipe(operators.map(function () { return serviceWorker.controller; }));\n                var currentController = rxjs.defer(function () { return rxjs.of(serviceWorker.controller); });\n                var controllerWithChanges = rxjs.concat(currentController, controllerChanges);\n                this.worker = controllerWithChanges.pipe(operators.filter(function (c) { return !!c; }));\n                this.registration = (this.worker.pipe(operators.switchMap(function () { return serviceWorker.getRegistration(); })));\n                var rawEvents = rxjs.fromEvent(serviceWorker, 'message');\n                var rawEventPayload = rawEvents.pipe(operators.map(function (event) { return event.data; }));\n                var eventsUnconnected = rawEventPayload.pipe(operators.filter(function (event) { return event && event.type; }));\n                var events = eventsUnconnected.pipe(operators.publish());\n                events.connect();\n                this.events = events;\n            }\n        }\n        NgswCommChannel.prototype.postMessage = function (action, payload) {\n            return this.worker\n                .pipe(operators.take(1), operators.tap(function (sw) {\n                sw.postMessage(__assign({ action: action }, payload));\n            }))\n                .toPromise()\n                .then(function () { return undefined; });\n        };\n        NgswCommChannel.prototype.postMessageWithStatus = function (type, payload, nonce) {\n            var waitForStatus = this.waitForStatus(nonce);\n            var postMessage = this.postMessage(type, payload);\n            return Promise.all([waitForStatus, postMessage]).then(function () { return undefined; });\n        };\n        NgswCommChannel.prototype.generateNonce = function () { return Math.round(Math.random() * 10000000); };\n        NgswCommChannel.prototype.eventsOfType = function (type) {\n            var filterFn = function (event) { return event.type === type; };\n            return this.events.pipe(operators.filter(filterFn));\n        };\n        NgswCommChannel.prototype.nextEventOfType = function (type) {\n            return this.eventsOfType(type).pipe(operators.take(1));\n        };\n        NgswCommChannel.prototype.waitForStatus = function (nonce) {\n            return this.eventsOfType('STATUS')\n                .pipe(operators.filter(function (event) { return event.nonce === nonce; }), operators.take(1), operators.map(function (event) {\n                if (event.status) {\n                    return undefined;\n                }\n                throw new Error(event.error);\n            }))\n                .toPromise();\n        };\n        Object.defineProperty(NgswCommChannel.prototype, \"isEnabled\", {\n            get: function () { return !!this.serviceWorker; },\n            enumerable: true,\n            configurable: true\n        });\n        return NgswCommChannel;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Subscribe and listen to push notifications from the Service Worker.\n     *\n     * @publicApi\n     */\n    var SwPush = /** @class */ (function () {\n        function SwPush(sw) {\n            this.sw = sw;\n            this.subscriptionChanges = new rxjs.Subject();\n            if (!sw.isEnabled) {\n                this.messages = rxjs.NEVER;\n                this.notificationClicks = rxjs.NEVER;\n                this.subscription = rxjs.NEVER;\n                return;\n            }\n            this.messages = this.sw.eventsOfType('PUSH').pipe(operators.map(function (message) { return message.data; }));\n            this.notificationClicks =\n                this.sw.eventsOfType('NOTIFICATION_CLICK').pipe(operators.map(function (message) { return message.data; }));\n            this.pushManager = this.sw.registration.pipe(operators.map(function (registration) { return registration.pushManager; }));\n            var workerDrivenSubscriptions = this.pushManager.pipe(operators.switchMap(function (pm) { return pm.getSubscription(); }));\n            this.subscription = rxjs.merge(workerDrivenSubscriptions, this.subscriptionChanges);\n        }\n        Object.defineProperty(SwPush.prototype, \"isEnabled\", {\n            /**\n             * True if the Service Worker is enabled (supported by the browser and enabled via\n             * `ServiceWorkerModule`).\n             */\n            get: function () { return this.sw.isEnabled; },\n            enumerable: true,\n            configurable: true\n        });\n        SwPush.prototype.requestSubscription = function (options) {\n            var _this = this;\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var pushOptions = { userVisibleOnly: true };\n            var key = this.decodeBase64(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n            var applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n            for (var i = 0; i < key.length; i++) {\n                applicationServerKey[i] = key.charCodeAt(i);\n            }\n            pushOptions.applicationServerKey = applicationServerKey;\n            return this.pushManager.pipe(operators.switchMap(function (pm) { return pm.subscribe(pushOptions); }), operators.take(1))\n                .toPromise()\n                .then(function (sub) {\n                _this.subscriptionChanges.next(sub);\n                return sub;\n            });\n        };\n        SwPush.prototype.unsubscribe = function () {\n            var _this = this;\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var doUnsubscribe = function (sub) {\n                if (sub === null) {\n                    throw new Error('Not subscribed to push notifications.');\n                }\n                return sub.unsubscribe().then(function (success) {\n                    if (!success) {\n                        throw new Error('Unsubscribe failed!');\n                    }\n                    _this.subscriptionChanges.next(null);\n                });\n            };\n            return this.subscription.pipe(operators.take(1), operators.switchMap(doUnsubscribe)).toPromise();\n        };\n        SwPush.prototype.decodeBase64 = function (input) { return atob(input); };\n        SwPush.ngInjectableDef = i0.defineInjectable({ token: SwPush, factory: function SwPush_Factory(t) { return new (t || SwPush)(i0.inject(NgswCommChannel)); }, providedIn: null });\n        return SwPush;\n    }());\n    /*@__PURE__*/ i0.ÉµsetClassMetadata(SwPush, [{\n            type: i0.Injectable\n        }], function () { return [{\n            type: NgswCommChannel\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Subscribe to update notifications from the Service Worker, trigger update\n     * checks, and forcibly activate updates.\n     *\n     * @publicApi\n     */\n    var SwUpdate = /** @class */ (function () {\n        function SwUpdate(sw) {\n            this.sw = sw;\n            if (!sw.isEnabled) {\n                this.available = rxjs.NEVER;\n                this.activated = rxjs.NEVER;\n                return;\n            }\n            this.available = this.sw.eventsOfType('UPDATE_AVAILABLE');\n            this.activated = this.sw.eventsOfType('UPDATE_ACTIVATED');\n        }\n        Object.defineProperty(SwUpdate.prototype, \"isEnabled\", {\n            /**\n             * True if the Service Worker is enabled (supported by the browser and enabled via\n             * `ServiceWorkerModule`).\n             */\n            get: function () { return this.sw.isEnabled; },\n            enumerable: true,\n            configurable: true\n        });\n        SwUpdate.prototype.checkForUpdate = function () {\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var statusNonce = this.sw.generateNonce();\n            return this.sw.postMessageWithStatus('CHECK_FOR_UPDATES', { statusNonce: statusNonce }, statusNonce);\n        };\n        SwUpdate.prototype.activateUpdate = function () {\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var statusNonce = this.sw.generateNonce();\n            return this.sw.postMessageWithStatus('ACTIVATE_UPDATE', { statusNonce: statusNonce }, statusNonce);\n        };\n        SwUpdate.ngInjectableDef = i0.defineInjectable({ token: SwUpdate, factory: function SwUpdate_Factory(t) { return new (t || SwUpdate)(i0.inject(NgswCommChannel)); }, providedIn: null });\n        return SwUpdate;\n    }());\n    /*@__PURE__*/ i0.ÉµsetClassMetadata(SwUpdate, [{\n            type: i0.Injectable\n        }], function () { return [{\n            type: NgswCommChannel\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RegistrationOptions = /** @class */ (function () {\n        function RegistrationOptions() {\n        }\n        return RegistrationOptions;\n    }());\n    var SCRIPT = new i0.InjectionToken('NGSW_REGISTER_SCRIPT');\n    function ngswAppInitializer(injector, script, options, platformId) {\n        var initializer = function () {\n            var app = injector.get(i0.ApplicationRef);\n            if (!(common.isPlatformBrowser(platformId) && ('serviceWorker' in navigator) &&\n                options.enabled !== false)) {\n                return;\n            }\n            var whenStable = app.isStable.pipe(operators.filter(function (stable) { return !!stable; }), operators.take(1)).toPromise();\n            // Wait for service worker controller changes, and fire an INITIALIZE action when a new SW\n            // becomes active. This allows the SW to initialize itself even if there is no application\n            // traffic.\n            navigator.serviceWorker.addEventListener('controllerchange', function () {\n                if (navigator.serviceWorker.controller !== null) {\n                    navigator.serviceWorker.controller.postMessage({ action: 'INITIALIZE' });\n                }\n            });\n            // Don't return the Promise, as that will block the application until the SW is registered, and\n            // cause a crash if the SW registration fails.\n            whenStable.then(function () { return navigator.serviceWorker.register(script, { scope: options.scope }); });\n        };\n        return initializer;\n    }\n    function ngswCommChannelFactory(opts, platformId) {\n        return new NgswCommChannel(common.isPlatformBrowser(platformId) && opts.enabled !== false ? navigator.serviceWorker :\n            undefined);\n    }\n    /**\n     * @publicApi\n     */\n    var ServiceWorkerModule = /** @class */ (function () {\n        function ServiceWorkerModule() {\n        }\n        /**\n         * Register the given Angular Service Worker script.\n         *\n         * If `enabled` is set to `false` in the given options, the module will behave as if service\n         * workers are not supported by the browser, and the service worker will not be registered.\n         */\n        ServiceWorkerModule.register = function (script, opts) {\n            if (opts === void 0) { opts = {}; }\n            return {\n                ngModule: ServiceWorkerModule,\n                providers: [\n                    { provide: SCRIPT, useValue: script },\n                    { provide: RegistrationOptions, useValue: opts },\n                    {\n                        provide: NgswCommChannel,\n                        useFactory: ngswCommChannelFactory,\n                        deps: [RegistrationOptions, i0.PLATFORM_ID]\n                    },\n                    {\n                        provide: i0.APP_INITIALIZER,\n                        useFactory: ngswAppInitializer,\n                        deps: [i0.Injector, SCRIPT, RegistrationOptions, i0.PLATFORM_ID],\n                        multi: true,\n                    },\n                ],\n            };\n        };\n        ServiceWorkerModule.ngModuleDef = i0.ÉµdefineNgModule({ type: ServiceWorkerModule });\n        ServiceWorkerModule.ngInjectorDef = i0.defineInjector({ factory: function ServiceWorkerModule_Factory(t) { return new (t || ServiceWorkerModule)(); }, providers: [SwPush, SwUpdate], imports: [] });\n        return ServiceWorkerModule;\n    }());\n    /*@__PURE__*/ i0.ÉµsetClassMetadata(ServiceWorkerModule, [{\n            type: i0.NgModule,\n            args: [{\n                    providers: [SwPush, SwUpdate],\n                }]\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.ServiceWorkerModule = ServiceWorkerModule;\n    exports.SwPush = SwPush;\n    exports.SwUpdate = SwUpdate;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=service-worker.umd.js.map\n"]}