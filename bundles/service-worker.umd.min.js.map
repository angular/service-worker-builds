{"version":3,"sources":["packages/service-worker/service-worker.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","serviceWorker","rxjs","operators","core","common","this","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","ERR_SW_NOT_SUPPORTED","NgswCommChannel","controllerChanges","fromEvent","pipe","map","controller","currentController","defer","of","controllerWithChanges","concat","worker","filter","registration","switchMap","getRegistration","events","event","data","publish","connect","errorObservable","message","throwError","Error","postMessage","action","payload","take","tap","sw","toPromise","then","postMessageWithStatus","type","nonce","waitForStatus","Promise","all","generateNonce","Math","round","random","eventsOfType","nextEventOfType","status","error","get","enumerable","configurable","SwPush","subscriptionChanges","Subject","isEnabled","messages","NEVER","subscription","pushManager","workerDrivenSubscriptions","pm","getSubscription","sub","merge","requestSubscription","options","_this","reject","pushOptions","userVisibleOnly","decodeBase64","serverPublicKey","replace","applicationServerKey","Uint8Array","ArrayBuffer","charCodeAt","subscribe","next","unsubscribe","success","input","atob","Injectable","SwUpdate","available","activated","checkForUpdate","statusNonce","activateUpdate","RegistrationOptions","SCRIPT","InjectionToken","ngswAppInitializer","injector","script","platformId","app","ApplicationRef","isPlatformBrowser","navigator","enabled","whenStable","isStable","stable","addEventListener","register","scope","ngswCommChannelFactory","opts","undefined","ServiceWorkerModule","ServiceWorkerModule_1","ngModule","providers","provide","useValue","useFactory","deps","PLATFORM_ID","APP_INITIALIZER","Injector","multi","NgModule","ɵangular_packages_service_worker_service_worker_e","ɵangular_packages_service_worker_service_worker_a","ɵangular_packages_service_worker_service_worker_b","ɵangular_packages_service_worker_service_worker_c","ɵangular_packages_service_worker_service_worker_d","value"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.9\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators'), require('@angular/core'), require('@angular/common')) :\n    typeof define === 'function' && define.amd ? define('@angular/service-worker', ['exports', 'rxjs', 'rxjs/operators', '@angular/core', '@angular/common'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.serviceWorker = {}),global.rxjs,global.rxjs.operators,global.ng.core,global.ng.common));\n}(this, (function (exports,rxjs,operators,core,common) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\n    function errorObservable(message) {\n        return rxjs.defer(function () { return rxjs.throwError(new Error(message)); });\n    }\n    /**\n     * @experimental\n    */\n    var NgswCommChannel = /** @class */ (function () {\n        function NgswCommChannel(serviceWorker) {\n            this.serviceWorker = serviceWorker;\n            if (!serviceWorker) {\n                this.worker = this.events = this.registration = errorObservable(ERR_SW_NOT_SUPPORTED);\n            }\n            else {\n                var controllerChangeEvents = (rxjs.fromEvent(serviceWorker, 'controllerchange'));\n                var controllerChanges = (controllerChangeEvents.pipe(operators.map(function () { return serviceWorker.controller; })));\n                var currentController = (rxjs.defer(function () { return rxjs.of(serviceWorker.controller); }));\n                var controllerWithChanges = (rxjs.concat(currentController, controllerChanges));\n                this.worker = (controllerWithChanges.pipe(operators.filter(function (c) { return !!c; })));\n                this.registration = (this.worker.pipe(operators.switchMap(function () { return serviceWorker.getRegistration(); })));\n                var rawEvents = rxjs.fromEvent(serviceWorker, 'message');\n                var rawEventPayload = rawEvents.pipe(operators.map(function (event) { return event.data; }));\n                var eventsUnconnected = (rawEventPayload.pipe(operators.filter(function (event) { return !!event && !!event['type']; })));\n                var events = eventsUnconnected.pipe(operators.publish());\n                this.events = events;\n                events.connect();\n            }\n        }\n        /**\n         * @internal\n         */\n        NgswCommChannel.prototype.postMessage = function (action, payload) {\n            return this.worker\n                .pipe(operators.take(1), operators.tap(function (sw) {\n                sw.postMessage(__assign({ action: action }, payload));\n            }))\n                .toPromise()\n                .then(function () { return undefined; });\n        };\n        /**\n         * @internal\n         */\n        NgswCommChannel.prototype.postMessageWithStatus = function (type, payload, nonce) {\n            var waitForStatus = this.waitForStatus(nonce);\n            var postMessage = this.postMessage(type, payload);\n            return Promise.all([waitForStatus, postMessage]).then(function () { return undefined; });\n        };\n        /**\n         * @internal\n         */\n        NgswCommChannel.prototype.generateNonce = function () { return Math.round(Math.random() * 10000000); };\n        /**\n         * @internal\n         */\n        // TODO(i): the typings and casts in this method are wonky, we should revisit it and make the\n        // types flow correctly\n        NgswCommChannel.prototype.eventsOfType = function (type) {\n            return this.events.pipe(operators.filter(function (event) { return event.type === type; }));\n        };\n        /**\n         * @internal\n         */\n        // TODO(i): the typings and casts in this method are wonky, we should revisit it and make the\n        // types flow correctly\n        NgswCommChannel.prototype.nextEventOfType = function (type) {\n            return (this.eventsOfType(type).pipe(operators.take(1)));\n        };\n        /**\n         * @internal\n         */\n        NgswCommChannel.prototype.waitForStatus = function (nonce) {\n            return this.eventsOfType('STATUS')\n                .pipe(operators.filter(function (event) { return event.nonce === nonce; }), operators.take(1), operators.map(function (event) {\n                if (event.status) {\n                    return undefined;\n                }\n                throw new Error(event.error);\n            }))\n                .toPromise();\n        };\n        Object.defineProperty(NgswCommChannel.prototype, \"isEnabled\", {\n            get: function () { return !!this.serviceWorker; },\n            enumerable: true,\n            configurable: true\n        });\n        return NgswCommChannel;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Subscribe and listen to push notifications from the Service Worker.\n     *\n     * @experimental\n     */\n    var SwPush = /** @class */ (function () {\n        function SwPush(sw) {\n            this.sw = sw;\n            this.subscriptionChanges = new rxjs.Subject();\n            if (!sw.isEnabled) {\n                this.messages = rxjs.NEVER;\n                this.subscription = rxjs.NEVER;\n                return;\n            }\n            this.messages = this.sw.eventsOfType('PUSH').pipe(operators.map(function (message) { return message.data; }));\n            this.pushManager = this.sw.registration.pipe(operators.map(function (registration) { return registration.pushManager; }));\n            var workerDrivenSubscriptions = this.pushManager.pipe(operators.switchMap(function (pm) { return pm.getSubscription().then(function (sub) { return sub; }); }));\n            this.subscription = rxjs.merge(workerDrivenSubscriptions, this.subscriptionChanges);\n        }\n        Object.defineProperty(SwPush.prototype, \"isEnabled\", {\n            /**\n             * Returns true if the Service Worker is enabled (supported by the browser and enabled via\n             * ServiceWorkerModule).\n             */\n            get: function () { return this.sw.isEnabled; },\n            enumerable: true,\n            configurable: true\n        });\n        SwPush.prototype.requestSubscription = function (options) {\n            var _this = this;\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var pushOptions = { userVisibleOnly: true };\n            var key = this.decodeBase64(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n            var applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n            for (var i = 0; i < key.length; i++) {\n                applicationServerKey[i] = key.charCodeAt(i);\n            }\n            pushOptions.applicationServerKey = applicationServerKey;\n            return this.pushManager.pipe(operators.switchMap(function (pm) { return pm.subscribe(pushOptions); }), operators.take(1))\n                .toPromise()\n                .then(function (sub) {\n                _this.subscriptionChanges.next(sub);\n                return sub;\n            });\n        };\n        SwPush.prototype.unsubscribe = function () {\n            var _this = this;\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var doUnsubscribe = function (sub) {\n                if (sub === null) {\n                    throw new Error('Not subscribed to push notifications.');\n                }\n                return sub.unsubscribe().then(function (success) {\n                    if (!success) {\n                        throw new Error('Unsubscribe failed!');\n                    }\n                    _this.subscriptionChanges.next(null);\n                });\n            };\n            return this.subscription.pipe(operators.take(1), operators.switchMap(doUnsubscribe)).toPromise();\n        };\n        SwPush.prototype.decodeBase64 = function (input) { return atob(input); };\n        SwPush = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [NgswCommChannel])\n        ], SwPush);\n        return SwPush;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Subscribe to update notifications from the Service Worker, trigger update\n     * checks, and forcibly activate updates.\n     *\n     * @experimental\n     */\n    var SwUpdate = /** @class */ (function () {\n        function SwUpdate(sw) {\n            this.sw = sw;\n            if (!sw.isEnabled) {\n                this.available = rxjs.NEVER;\n                this.activated = rxjs.NEVER;\n                return;\n            }\n            this.available = this.sw.eventsOfType('UPDATE_AVAILABLE');\n            this.activated = this.sw.eventsOfType('UPDATE_ACTIVATED');\n        }\n        Object.defineProperty(SwUpdate.prototype, \"isEnabled\", {\n            /**\n             * Returns true if the Service Worker is enabled (supported by the browser and enabled via\n             * ServiceWorkerModule).\n             */\n            get: function () { return this.sw.isEnabled; },\n            enumerable: true,\n            configurable: true\n        });\n        SwUpdate.prototype.checkForUpdate = function () {\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var statusNonce = this.sw.generateNonce();\n            return this.sw.postMessageWithStatus('CHECK_FOR_UPDATES', { statusNonce: statusNonce }, statusNonce);\n        };\n        SwUpdate.prototype.activateUpdate = function () {\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var statusNonce = this.sw.generateNonce();\n            return this.sw.postMessageWithStatus('ACTIVATE_UPDATE', { statusNonce: statusNonce }, statusNonce);\n        };\n        SwUpdate = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [NgswCommChannel])\n        ], SwUpdate);\n        return SwUpdate;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RegistrationOptions = /** @class */ (function () {\n        function RegistrationOptions() {\n        }\n        return RegistrationOptions;\n    }());\n    var SCRIPT = new core.InjectionToken('NGSW_REGISTER_SCRIPT');\n    function ngswAppInitializer(injector, script, options, platformId) {\n        var initializer = function () {\n            var app = injector.get(core.ApplicationRef);\n            if (!(common.isPlatformBrowser(platformId) && ('serviceWorker' in navigator) &&\n                options.enabled !== false)) {\n                return;\n            }\n            var whenStable = app.isStable.pipe(operators.filter(function (stable) { return !!stable; }), operators.take(1)).toPromise();\n            // Wait for service worker controller changes, and fire an INITIALIZE action when a new SW\n            // becomes active. This allows the SW to initialize itself even if there is no application\n            // traffic.\n            navigator.serviceWorker.addEventListener('controllerchange', function () {\n                if (navigator.serviceWorker.controller !== null) {\n                    navigator.serviceWorker.controller.postMessage({ action: 'INITIALIZE' });\n                }\n            });\n            // Don't return the Promise, as that will block the application until the SW is registered, and\n            // cause a crash if the SW registration fails.\n            whenStable.then(function () { return navigator.serviceWorker.register(script, { scope: options.scope }); });\n        };\n        return initializer;\n    }\n    function ngswCommChannelFactory(opts, platformId) {\n        return new NgswCommChannel(common.isPlatformBrowser(platformId) && opts.enabled !== false ? navigator.serviceWorker :\n            undefined);\n    }\n    /**\n     * @experimental\n     */\n    var ServiceWorkerModule = /** @class */ (function () {\n        function ServiceWorkerModule() {\n        }\n        ServiceWorkerModule_1 = ServiceWorkerModule;\n        /**\n         * Register the given Angular Service Worker script.\n         *\n         * If `enabled` is set to `false` in the given options, the module will behave as if service\n         * workers are not supported by the browser, and the service worker will not be registered.\n         */\n        ServiceWorkerModule.register = function (script, opts) {\n            if (opts === void 0) { opts = {}; }\n            return {\n                ngModule: ServiceWorkerModule_1,\n                providers: [\n                    { provide: SCRIPT, useValue: script },\n                    { provide: RegistrationOptions, useValue: opts },\n                    {\n                        provide: NgswCommChannel,\n                        useFactory: ngswCommChannelFactory,\n                        deps: [RegistrationOptions, core.PLATFORM_ID]\n                    },\n                    {\n                        provide: core.APP_INITIALIZER,\n                        useFactory: ngswAppInitializer,\n                        deps: [core.Injector, SCRIPT, RegistrationOptions, core.PLATFORM_ID],\n                        multi: true,\n                    },\n                ],\n            };\n        };\n        var ServiceWorkerModule_1;\n        ServiceWorkerModule = ServiceWorkerModule_1 = __decorate([\n            core.NgModule({\n                providers: [SwPush, SwUpdate],\n            })\n        ], ServiceWorkerModule);\n        return ServiceWorkerModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_service_worker_service_worker_e = NgswCommChannel;\n    exports.ɵangular_packages_service_worker_service_worker_a = RegistrationOptions;\n    exports.ɵangular_packages_service_worker_service_worker_b = SCRIPT;\n    exports.ɵangular_packages_service_worker_service_worker_c = ngswAppInitializer;\n    exports.ɵangular_packages_service_worker_service_worker_d = ngswCommChannelFactory;\n    exports.ServiceWorkerModule = ServiceWorkerModule;\n    exports.SwPush = SwPush;\n    exports.SwUpdate = SwUpdate;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=service-worker.umd.js.map\n"]}