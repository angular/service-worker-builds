{"version":3,"sources":["packages/service-worker/service-worker.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","serviceWorker","rxjs","operators","core","common","this","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","ERR_SW_NOT_SUPPORTED","NgswCommChannel","controllerChanges","fromEvent","pipe","map","controller","currentController","defer","of","controllerWithChanges","concat","worker","filter","c","registration","switchMap","getRegistration","events","event","data","publish","connect","errorObservable","message","throwError","Error","postMessage","action","payload","take","tap","sw","toPromise","then","postMessageWithStatus","type","nonce","waitForStatus","Promise","all","generateNonce","Math","round","random","eventsOfType","nextEventOfType","status","error","defineProperty","get","enumerable","configurable","SwPush","subscriptionChanges","Subject","isEnabled","messages","NEVER","subscription","pushManager","workerDrivenSubscriptions","pm","getSubscription","sub","merge","requestSubscription","options","_this","reject","pushOptions","userVisibleOnly","key","decodeBase64","serverPublicKey","replace","applicationServerKey","Uint8Array","ArrayBuffer","charCodeAt","subscribe","next","unsubscribe","success","input","atob","decorators","Injectable","ctorParameters","SwUpdate","available","activated","checkForUpdate","statusNonce","activateUpdate","RegistrationOptions","SCRIPT","InjectionToken","ngswAppInitializer","injector","script","platformId","app","ApplicationRef","isPlatformBrowser","navigator","enabled","whenStable","isStable","stable","addEventListener","register","scope","ngswCommChannelFactory","opts","undefined","ServiceWorkerModule","ngModule","providers","provide","useValue","useFactory","deps","PLATFORM_ID","APP_INITIALIZER","Injector","multi","NgModule","args","ɵangular_packages_service_worker_service_worker_e","ɵangular_packages_service_worker_service_worker_a","ɵangular_packages_service_worker_service_worker_b","ɵangular_packages_service_worker_service_worker_c","ɵangular_packages_service_worker_service_worker_d","value"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.6\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators'), require('@angular/core'), require('@angular/common')) :\n    typeof define === 'function' && define.amd ? define('@angular/service-worker', ['exports', 'rxjs', 'rxjs/operators', '@angular/core', '@angular/common'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.serviceWorker = {}),global.rxjs,global.rxjs.operators,global.ng.core,global.ng.common));\n}(this, (function (exports,rxjs,operators,core,common) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\n    function errorObservable(message) {\n        return rxjs.defer(function () { return rxjs.throwError(new Error(message)); });\n    }\n    /**\n     * @experimental\n    */\n    var NgswCommChannel = /** @class */ (function () {\n        function NgswCommChannel(serviceWorker) {\n            this.serviceWorker = serviceWorker;\n            if (!serviceWorker) {\n                this.worker = this.events = this.registration = errorObservable(ERR_SW_NOT_SUPPORTED);\n            }\n            else {\n                var controllerChangeEvents = (rxjs.fromEvent(serviceWorker, 'controllerchange'));\n                var controllerChanges = (controllerChangeEvents.pipe(operators.map(function () { return serviceWorker.controller; })));\n                var currentController = (rxjs.defer(function () { return rxjs.of(serviceWorker.controller); }));\n                var controllerWithChanges = (rxjs.concat(currentController, controllerChanges));\n                this.worker = (controllerWithChanges.pipe(operators.filter(function (c) { return !!c; })));\n                this.registration = (this.worker.pipe(operators.switchMap(function () { return serviceWorker.getRegistration(); })));\n                var rawEvents = rxjs.fromEvent(serviceWorker, 'message');\n                var rawEventPayload = rawEvents.pipe(operators.map(function (event) { return event.data; }));\n                var eventsUnconnected = (rawEventPayload.pipe(operators.filter(function (event) { return !!event && !!event['type']; })));\n                var events = eventsUnconnected.pipe(operators.publish());\n                this.events = events;\n                events.connect();\n            }\n        }\n        /**\n         * @internal\n         */\n        NgswCommChannel.prototype.postMessage = function (action, payload) {\n            return this.worker\n                .pipe(operators.take(1), operators.tap(function (sw) {\n                sw.postMessage(__assign({ action: action }, payload));\n            }))\n                .toPromise()\n                .then(function () { return undefined; });\n        };\n        /**\n         * @internal\n         */\n        NgswCommChannel.prototype.postMessageWithStatus = function (type, payload, nonce) {\n            var waitForStatus = this.waitForStatus(nonce);\n            var postMessage = this.postMessage(type, payload);\n            return Promise.all([waitForStatus, postMessage]).then(function () { return undefined; });\n        };\n        /**\n         * @internal\n         */\n        NgswCommChannel.prototype.generateNonce = function () { return Math.round(Math.random() * 10000000); };\n        /**\n         * @internal\n         */\n        // TODO(i): the typings and casts in this method are wonky, we should revisit it and make the\n        // types flow correctly\n        NgswCommChannel.prototype.eventsOfType = function (type) {\n            return this.events.pipe(operators.filter(function (event) { return event.type === type; }));\n        };\n        /**\n         * @internal\n         */\n        // TODO(i): the typings and casts in this method are wonky, we should revisit it and make the\n        // types flow correctly\n        NgswCommChannel.prototype.nextEventOfType = function (type) {\n            return (this.eventsOfType(type).pipe(operators.take(1)));\n        };\n        /**\n         * @internal\n         */\n        NgswCommChannel.prototype.waitForStatus = function (nonce) {\n            return this.eventsOfType('STATUS')\n                .pipe(operators.filter(function (event) { return event.nonce === nonce; }), operators.take(1), operators.map(function (event) {\n                if (event.status) {\n                    return undefined;\n                }\n                throw new Error(event.error);\n            }))\n                .toPromise();\n        };\n        Object.defineProperty(NgswCommChannel.prototype, \"isEnabled\", {\n            get: function () { return !!this.serviceWorker; },\n            enumerable: true,\n            configurable: true\n        });\n        return NgswCommChannel;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Subscribe and listen to push notifications from the Service Worker.\n     *\n     * @experimental\n     */\n    var SwPush = /** @class */ (function () {\n        function SwPush(sw) {\n            this.sw = sw;\n            this.subscriptionChanges = new rxjs.Subject();\n            if (!sw.isEnabled) {\n                this.messages = rxjs.NEVER;\n                this.subscription = rxjs.NEVER;\n                return;\n            }\n            this.messages = this.sw.eventsOfType('PUSH').pipe(operators.map(function (message) { return message.data; }));\n            this.pushManager = this.sw.registration.pipe(operators.map(function (registration) { return registration.pushManager; }));\n            var workerDrivenSubscriptions = this.pushManager.pipe(operators.switchMap(function (pm) { return pm.getSubscription().then(function (sub) { return sub; }); }));\n            this.subscription = rxjs.merge(workerDrivenSubscriptions, this.subscriptionChanges);\n        }\n        Object.defineProperty(SwPush.prototype, \"isEnabled\", {\n            /**\n             * Returns true if the Service Worker is enabled (supported by the browser and enabled via\n             * ServiceWorkerModule).\n             */\n            get: function () { return this.sw.isEnabled; },\n            enumerable: true,\n            configurable: true\n        });\n        SwPush.prototype.requestSubscription = function (options) {\n            var _this = this;\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var pushOptions = { userVisibleOnly: true };\n            var key = this.decodeBase64(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n            var applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n            for (var i = 0; i < key.length; i++) {\n                applicationServerKey[i] = key.charCodeAt(i);\n            }\n            pushOptions.applicationServerKey = applicationServerKey;\n            return this.pushManager.pipe(operators.switchMap(function (pm) { return pm.subscribe(pushOptions); }), operators.take(1))\n                .toPromise()\n                .then(function (sub) {\n                _this.subscriptionChanges.next(sub);\n                return sub;\n            });\n        };\n        SwPush.prototype.unsubscribe = function () {\n            var _this = this;\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var doUnsubscribe = function (sub) {\n                if (sub === null) {\n                    throw new Error('Not subscribed to push notifications.');\n                }\n                return sub.unsubscribe().then(function (success) {\n                    if (!success) {\n                        throw new Error('Unsubscribe failed!');\n                    }\n                    _this.subscriptionChanges.next(null);\n                });\n            };\n            return this.subscription.pipe(operators.take(1), operators.switchMap(doUnsubscribe)).toPromise();\n        };\n        SwPush.prototype.decodeBase64 = function (input) { return atob(input); };\n        SwPush.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        SwPush.ctorParameters = function () { return [\n            { type: NgswCommChannel }\n        ]; };\n        return SwPush;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Subscribe to update notifications from the Service Worker, trigger update\n     * checks, and forcibly activate updates.\n     *\n     * @experimental\n     */\n    var SwUpdate = /** @class */ (function () {\n        function SwUpdate(sw) {\n            this.sw = sw;\n            if (!sw.isEnabled) {\n                this.available = rxjs.NEVER;\n                this.activated = rxjs.NEVER;\n                return;\n            }\n            this.available = this.sw.eventsOfType('UPDATE_AVAILABLE');\n            this.activated = this.sw.eventsOfType('UPDATE_ACTIVATED');\n        }\n        Object.defineProperty(SwUpdate.prototype, \"isEnabled\", {\n            /**\n             * Returns true if the Service Worker is enabled (supported by the browser and enabled via\n             * ServiceWorkerModule).\n             */\n            get: function () { return this.sw.isEnabled; },\n            enumerable: true,\n            configurable: true\n        });\n        SwUpdate.prototype.checkForUpdate = function () {\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var statusNonce = this.sw.generateNonce();\n            return this.sw.postMessageWithStatus('CHECK_FOR_UPDATES', { statusNonce: statusNonce }, statusNonce);\n        };\n        SwUpdate.prototype.activateUpdate = function () {\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var statusNonce = this.sw.generateNonce();\n            return this.sw.postMessageWithStatus('ACTIVATE_UPDATE', { statusNonce: statusNonce }, statusNonce);\n        };\n        SwUpdate.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        SwUpdate.ctorParameters = function () { return [\n            { type: NgswCommChannel }\n        ]; };\n        return SwUpdate;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RegistrationOptions = /** @class */ (function () {\n        function RegistrationOptions() {\n        }\n        return RegistrationOptions;\n    }());\n    var SCRIPT = new core.InjectionToken('NGSW_REGISTER_SCRIPT');\n    function ngswAppInitializer(injector, script, options, platformId) {\n        var initializer = function () {\n            var app = injector.get(core.ApplicationRef);\n            if (!(common.isPlatformBrowser(platformId) && ('serviceWorker' in navigator) &&\n                options.enabled !== false)) {\n                return;\n            }\n            var whenStable = app.isStable.pipe(operators.filter(function (stable) { return !!stable; }), operators.take(1)).toPromise();\n            // Wait for service worker controller changes, and fire an INITIALIZE action when a new SW\n            // becomes active. This allows the SW to initialize itself even if there is no application\n            // traffic.\n            navigator.serviceWorker.addEventListener('controllerchange', function () {\n                if (navigator.serviceWorker.controller !== null) {\n                    navigator.serviceWorker.controller.postMessage({ action: 'INITIALIZE' });\n                }\n            });\n            // Don't return the Promise, as that will block the application until the SW is registered, and\n            // cause a crash if the SW registration fails.\n            whenStable.then(function () { return navigator.serviceWorker.register(script, { scope: options.scope }); });\n        };\n        return initializer;\n    }\n    function ngswCommChannelFactory(opts, platformId) {\n        return new NgswCommChannel(common.isPlatformBrowser(platformId) && opts.enabled !== false ? navigator.serviceWorker :\n            undefined);\n    }\n    /**\n     * @experimental\n     */\n    var ServiceWorkerModule = /** @class */ (function () {\n        function ServiceWorkerModule() {\n        }\n        /**\n         * Register the given Angular Service Worker script.\n         *\n         * If `enabled` is set to `false` in the given options, the module will behave as if service\n         * workers are not supported by the browser, and the service worker will not be registered.\n         */\n        ServiceWorkerModule.register = function (script, opts) {\n            if (opts === void 0) { opts = {}; }\n            return {\n                ngModule: ServiceWorkerModule,\n                providers: [\n                    { provide: SCRIPT, useValue: script },\n                    { provide: RegistrationOptions, useValue: opts },\n                    {\n                        provide: NgswCommChannel,\n                        useFactory: ngswCommChannelFactory,\n                        deps: [RegistrationOptions, core.PLATFORM_ID]\n                    },\n                    {\n                        provide: core.APP_INITIALIZER,\n                        useFactory: ngswAppInitializer,\n                        deps: [core.Injector, SCRIPT, RegistrationOptions, core.PLATFORM_ID],\n                        multi: true,\n                    },\n                ],\n            };\n        };\n        ServiceWorkerModule.decorators = [\n            { type: core.NgModule, args: [{\n                        providers: [SwPush, SwUpdate],\n                    },] }\n        ];\n        return ServiceWorkerModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_service_worker_service_worker_e = NgswCommChannel;\n    exports.ɵangular_packages_service_worker_service_worker_a = RegistrationOptions;\n    exports.ɵangular_packages_service_worker_service_worker_b = SCRIPT;\n    exports.ɵangular_packages_service_worker_service_worker_c = ngswAppInitializer;\n    exports.ɵangular_packages_service_worker_service_worker_d = ngswCommChannelFactory;\n    exports.ServiceWorkerModule = ServiceWorkerModule;\n    exports.SwPush = SwPush;\n    exports.SwUpdate = SwUpdate;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=service-worker.umd.js.map\n"]}